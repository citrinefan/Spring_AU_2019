package com.springdemo.tutorial.controller;

import org.springframework.stereotype.Controller;
import org.springframework.ui.ModelMap;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.ModelAttribute;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;
import org.springframework.web.servlet.ModelAndView;

import com.springdemo.tutorial.Student;
import com.springdemo.tutorial.controller.JDBCTemplateDao;

import org.springframework.context.ApplicationContext;
import org.springframework.context.support.ClassPathXmlApplicationContext;


@Controller
public class StudentController {
	
	@RequestMapping(value = "/getStudent",method=RequestMethod.GET,produces="application/json")
	@ResponseBody
	public Student getStudent(){
		 Student student = new Student();
		 student.setStudentId("15");
		 student.setStudentName("Accolite");
		 return student;
	}
	
	@RequestMapping(value="/getStudents",method=RequestMethod.GET,produces = "application/json")
	@ResponseBody
	public Student getStudents(@RequestParam("id")String id){
		Student student = new Student();
	    student.setStudentId(id);
	    student.setStudentName("XYZ");
	    return student;
	}
	
	@RequestMapping(value="/getStudent/{id}",method=RequestMethod.GET,produces = "application/json")
	@ResponseBody
	public Student getStudent(@PathVariable("id")String id){
		Student student = new Student();
	    student.setStudentId(id);	
	    student.setStudentName("XYZ");
	    return student;
	}
	
	 @RequestMapping(value = "/student", method = RequestMethod.GET)
	   public ModelAndView student() {
	      return new ModelAndView("student", "command", new Student());
	   }
	 
	 @RequestMapping(value = "/addStudent", method = RequestMethod.POST)
	      public ModelAndView addStudent(@ModelAttribute("student") Student student, ModelAndView model) {
	      System.out.println("**********************Inside Add Student****************");
		ApplicationContext applicationContext = new ClassPathXmlApplicationContext("applicationContext.xml");
	      JDBCTemplateDao jdbcTemplateDao = (JDBCTemplateDao) applicationContext.getBean(JDBCTemplateDao.class);
	      
	      System.out.println(jdbcTemplateDao.saveStudent(student));
			//System.out.println(jdbcTemplateDao.saveStudentUsingPreparedStatement(student));
		  List<Student> list = JDBCTemplateDao.
			      model.addObject("list",jdbcTem)
			      model.setViewName("result");
	      System.out.println(student);
	      return model;
	   }
	  
	
	
	

}
